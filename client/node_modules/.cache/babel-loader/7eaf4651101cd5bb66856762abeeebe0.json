{"ast":null,"code":"var _jsxFileName = \"/home/student/zad1/client/src/Fibonacci.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Fibonacci extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      seenIndexes: [],\n      index: \"\",\n      val: 0\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      var valu = this.fib(this.state.index);\n      console.log(valu); // await axios.post(\"/api/insert\", {\n      //   setNumber: this.state.index,\n      // });\n\n      this.setState({\n        index: \"\",\n        val: valu\n      }); //this.fetchValues();\n\n      this.fetchIndexes();\n    };\n  }\n\n  componentDidMount() {\n    this.fetchIndexes();\n  }\n\n  async fetchIndexes() {// const values = await axios.get(\"/api/get\");\n    // this.setState({ values: values.data });\n  }\n\n  renderSeenIndexes() {\n    return this.state.seenIndexes.map(_ref => {\n      let {\n        number\n      } = _ref;\n      return number;\n    }).join(\", \");\n  }\n\n  fib(ind) {\n    if (ind < 2) return 1;\n    return this.fib(ind - 1) + this.fib(ind - 2);\n  }\n\n  showCalcValue() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.state.val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  renderValues() {\n    const entries = [];\n\n    for (let key in this.state.values) {\n      entries.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"For index \", key, \" I calculated \", this.state.values[key]]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this));\n    }\n\n    return entries;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter your index:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.index,\n          onChange: event => this.setState({\n            index: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Calculated fibo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.showCalcValue()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Calculated Values:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), this.renderValues()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Fibonacci;","map":{"version":3,"sources":["/home/student/zad1/client/src/Fibonacci.js"],"names":["React","Component","axios","Fibonacci","state","seenIndexes","index","val","handleSubmit","event","preventDefault","valu","fib","console","log","setState","fetchIndexes","componentDidMount","renderSeenIndexes","map","number","join","ind","showCalcValue","renderValues","entries","key","values","push","render","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCG,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,GAAG,EAAC;AAHE,KADwB;;AAAA,SAiBhCC,YAjBgC,GAiBjB,MAAOC,KAAP,IAAiB;AAC9BA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,IAAI,GAAC,KAAKC,GAAL,CAAS,KAAKR,KAAL,CAAWE,KAApB,CAAT;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAH8B,CAI9B;AACA;AACA;;AAEA,WAAKI,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE,EAAT;AAAYC,QAAAA,GAAG,EAACI;AAAhB,OAAd,EAR8B,CAS9B;;AACC,WAAKK,YAAL;AACF,KA5B+B;AAAA;;AAOhCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,YAAL;AACD;;AAEiB,QAAZA,YAAY,GAAG,CACnB;AACA;AACD;;AAgBDE,EAAAA,iBAAiB,GAAG;AAClB,WAAO,KAAKd,KAAL,CAAWC,WAAX,CAAuBc,GAAvB,CAA2B;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aAAgBA,MAAhB;AAAA,KAA3B,EAAmDC,IAAnD,CAAwD,IAAxD,CAAP;AACD;;AAEDT,EAAAA,GAAG,CAACU,GAAD,EAAM;AACP,QAAGA,GAAG,GAAC,CAAP,EAAU,OAAO,CAAP;AACV,WAAO,KAAKV,GAAL,CAASU,GAAG,GAAC,CAAb,IAAgB,KAAKV,GAAL,CAASU,GAAG,GAAC,CAAb,CAAvB;AACD;;AAEDC,EAAAA,aAAa,GAAE;AACb,wBAAO;AAAA,6BAAK;AAAA,kBAAO,KAAKnB,KAAL,CAAWG;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACDiB,EAAAA,YAAY,GAAG;AACb,UAAMC,OAAO,GAAG,EAAhB;;AAEA,SAAK,IAAIC,GAAT,IAAgB,KAAKtB,KAAL,CAAWuB,MAA3B,EAAmC;AACjCF,MAAAA,OAAO,CAACG,IAAR,eACE;AAAA,iCACaF,GADb,oBACgC,KAAKtB,KAAL,CAAWuB,MAAX,CAAkBD,GAAlB,CADhC;AAAA,SAAUA,GAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,WAAOD,OAAP;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAE,KAAKrB,YAArB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,KADpB;AAEE,UAAA,QAAQ,EAAGG,KAAD,IAAW,KAAKM,QAAL,CAAc;AAAET,YAAAA,KAAK,EAAEG,KAAK,CAACqB,MAAN,CAAaC;AAAtB,WAAd;AAFvB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA,kBAAI,KAAKR,aAAL;AAAJ;AAAA;AAAA;AAAA;AAAA,cAXF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAcG,KAAKC,YAAL,EAdH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA3E+B;;AA8ElC,eAAerB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Fibonacci extends Component {\n  state = {\n    seenIndexes: [],\n    index: \"\",\n    val:0,\n  };\n\n  componentDidMount() {\n    this.fetchIndexes();\n  }\n\n  async fetchIndexes() {\n    // const values = await axios.get(\"/api/get\");\n    // this.setState({ values: values.data });\n  }\n\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    var valu=this.fib(this.state.index);\n    console.log(valu);\n    // await axios.post(\"/api/insert\", {\n    //   setNumber: this.state.index,\n    // });\n    \n    this.setState({ index: \"\",val:valu});\n    //this.fetchValues();\n     this.fetchIndexes();\n  };\n\n  renderSeenIndexes() {\n    return this.state.seenIndexes.map(({ number }) => number).join(\", \");\n  }\n\n  fib(ind) {\n    if(ind<2) return 1;\n    return this.fib(ind-1)+this.fib(ind-2);\n  }\n\n  showCalcValue(){\n    return <div><span>{this.state.val}</span></div>\n  }\n  renderValues() {\n    const entries = [];\n\n    for (let key in this.state.values) {\n      entries.push(\n        <div key={key}>\n          For index {key} I calculated {this.state.values[key]}\n        </div>\n      );\n    }\n\n    return entries;\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>Enter your index:</label>\n          <input\n            value={this.state.index}\n            onChange={(event) => this.setState({ index: event.target.value })}\n          />\n          <button>Submit</button>\n        </form>\n\n        <h3>Calculated fibo:</h3>\n        <p>{this.showCalcValue()}</p>\n\n        <h3>Calculated Values:</h3>\n        {this.renderValues()}\n      </div>\n    );\n  }\n}\n\nexport default Fibonacci;\n"]},"metadata":{},"sourceType":"module"}